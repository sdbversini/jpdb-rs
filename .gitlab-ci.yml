image: "rust:latest"

#test:cargo:
#  script:
#    - rustc --version && cargo --version  # Print version info for debugging
#    - cargo test --workspace --verbose

read_secrets:
  image: vault:latest
  script:
    - export VAULT_ADDR=$VAULT_SERVER_URL
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=jpdb jwt=$CI_JOB_JWT)"
    - export JPDB_TOKEN="$(vault kv get -field=dummy_api secret/jpdb)"
    - echo "JPDB_TOKEN=$JPDB_TOKEN" >> build.env
  artifacts:
    reports:
      dotenv: build.env

# Optional: Use a third party library to generate gitlab junit reports
test:jpdb:junit-report:
  script:
    - cargo install junitify 
    - cargo test jpdb -- --format=json -Z unstable-options --report-time --test-threads=1 | junitify --out $CI_PROJECT_DIR/tests/
  artifacts:
    when: always
    reports:
        junit: $CI_PROJECT_DIR/tests/*.xml
  needs:
    - job: read_secrets
      artifacts: true

test:mock:junit-report:
  script:
    - cargo install junitify 
    - cargo test tests_common -- --format=json -Z unstable-options --report-time --test-threads=1 | junitify --out $CI_PROJECT_DIR/tests/
  artifacts:
    when: always
    reports:
        junit: $CI_PROJECT_DIR/tests/*.xml

# deploy:
#   stage: deploy
#   script: cargo publish
#   environment: production
